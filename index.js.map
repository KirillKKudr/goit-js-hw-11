{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["\nconst API_KEY = '46859410-d5a1b7b8d3c8579cf11d58e8b';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport function fetchImages(query, page = 1, perPage = 12) {\n  const url = `${BASE_URL}?key=${API_KEY}&q=${query}&image_type=photo&orientation=horizontal&safesearch=true&page=${page}&per_page=${perPage}`;\n\n  return fetch(url)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch images');\n      }\n      return response.json();\n    })\n    .then(data => data.hits) \n    .catch(error => {\n      console.error('Error fetching images:', error);\n      throw error;\n    });\n}\n","\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nexport function renderImages(images, container) {\n  const markup = images.map(image => `\n    <div class=\"photo-card\">\n      <img src=\"${image.webformatURL}\" alt=\"${image.tags}\" loading=\"lazy\" />\n      <div class=\"info\">\n        <p>Likes: ${image.likes}</p>\n        <p>Views: ${image.views}</p>\n        <p>Comments: ${image.comments}</p>\n        <p>Downloads: ${image.downloads}</p>\n      </div>\n    </div>\n  `).join('');\n  container.innerHTML = markup;\n}\n\nexport function showNoResultsMessage() {\n  iziToast.info({\n    title: 'Oops!',\n    message: 'Sorry, there are no images matching your search query. Please try again!',\n    position: 'topRight',\n    timeout: 3000,\n  });\n}\n","\nimport { fetchImages } from './js/pixabay-api';\nimport { renderImages, showNoResultsMessage } from './js/render-functions';\n\nconst form = document.querySelector('#search-form');\nconst galleryContainer = document.querySelector('#gallery');\nconst perPage = 12;\nlet currentPage = 1;\n\nform.addEventListener('submit', (event) => {\n  event.preventDefault();\n  const query = event.currentTarget.elements.searchQuery.value.trim();\n\n  if (query === '') {\n    showNoResultsMessage();\n    return;\n  }\n\n  fetchImages(query, currentPage, perPage)\n    .then(images => {\n      if (images.length === 0) {\n        showNoResultsMessage();\n      } else {\n        renderImages(images, galleryContainer);\n      }\n      form.reset(); \n    })\n    .catch(error => {\n      console.error('Error processing images:', error);\n    });\n});\n"],"names":["API_KEY","BASE_URL","fetchImages","query","page","perPage","url","response","data","error","renderImages","images","container","markup","image","showNoResultsMessage","iziToast","form","galleryContainer","currentPage","event"],"mappings":"svBACA,MAAMA,EAAU,qCACVC,EAAW,2BAEV,SAASC,EAAYC,EAAOC,EAAO,EAAGC,EAAU,GAAI,CACzD,MAAMC,EAAM,GAAGL,CAAQ,QAAQD,CAAO,MAAMG,CAAK,iEAAiEC,CAAI,aAAaC,CAAO,GAE1I,OAAO,MAAMC,CAAG,EACb,KAAKC,GAAY,CAChB,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAM,wBAAwB,EAE1C,OAAOA,EAAS,MACtB,CAAK,EACA,KAAKC,GAAQA,EAAK,IAAI,EACtB,MAAMC,GAAS,CACd,cAAQ,MAAM,yBAA0BA,CAAK,EACvCA,CACZ,CAAK,CACL,CCfO,SAASC,EAAaC,EAAQC,EAAW,CAC9C,MAAMC,EAASF,EAAO,IAAIG,GAAS;AAAA;AAAA,kBAEnBA,EAAM,YAAY,UAAUA,EAAM,IAAI;AAAA;AAAA,oBAEpCA,EAAM,KAAK;AAAA,oBACXA,EAAM,KAAK;AAAA,uBACRA,EAAM,QAAQ;AAAA,wBACbA,EAAM,SAAS;AAAA;AAAA;AAAA,GAGpC,EAAE,KAAK,EAAE,EACVF,EAAU,UAAYC,CACxB,CAEO,SAASE,GAAuB,CACrCC,EAAS,KAAK,CACZ,MAAO,QACP,QAAS,2EACT,SAAU,WACV,QAAS,GACb,CAAG,CACH,CCtBA,MAAMC,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAmB,SAAS,cAAc,UAAU,EACpDb,EAAU,GAChB,IAAIc,EAAc,EAElBF,EAAK,iBAAiB,SAAWG,GAAU,CACzCA,EAAM,eAAc,EACpB,MAAMjB,EAAQiB,EAAM,cAAc,SAAS,YAAY,MAAM,OAE7D,GAAIjB,IAAU,GAAI,CAChBY,IACA,MACD,CAEDb,EAAYC,EAAOgB,EAAad,CAAO,EACpC,KAAKM,GAAU,CACVA,EAAO,SAAW,EACpBI,IAEAL,EAAaC,EAAQO,CAAgB,EAEvCD,EAAK,MAAK,CAChB,CAAK,EACA,MAAMR,GAAS,CACd,QAAQ,MAAM,2BAA4BA,CAAK,CACrD,CAAK,CACL,CAAC"}